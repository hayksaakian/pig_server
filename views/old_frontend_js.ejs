
    <script>
      var DIE_MAP = [
        "<i class='fi-die-one large red'></i>",
        "<i class='fi-die-two large'></i>",
        "<i class='fi-die-three large'></i>",
        "<i class='fi-die-four large'></i>",
        "<i class='fi-die-five large'></i>",
        "<i class='fi-die-six large'></i>",
      ]
      function css_escape(string){
        return string.replace(/[!\"#$%&'\(\)\*\+,\.\/:;<=>\?\@\[\\\]\^`\{\|\}~]/g, '');
      }
      $('[data-toggle="tooltip"]').tooltip()
      // fix tabs so that the right one 
      // is active at the right time
      $('#roompicker').on('show.bs.tab', function (e) {
        $('#roompicker li.active').removeClass('active');
        console.log($('#roompicker li.active'))
      })

      var user = <%- user ? JSON.stringify(user) : null %>;
      var socket = io.connect(':'+<%= port %>);
      socket.on('disconnect', function(){
        if($('#refreshbtn').length == 0){
          $('#main').prepend("<button id='refreshbtn' onClick='(window || document).location.reload(true)' class='btn btn-danger'>LOST Connection to Server, click here to reload.</button>")        
        }else{
          $('#refreshbtn').show()
        }
      })

      socket.on('connect', function () {
        if($('#refreshbtn').length > 0){
          $('#refreshbtn').hide()
        }
      })

      //disable things if theres no connection
      //make play vs ai happen offline
      function addMessage(d){
        addMessageToRoom(d, 'server-broadcast')
      }
      function ensureRoom(roomname){
        var escaped = css_escape(roomname)
        var room_selector = "#"+escaped+"-chat"
        if($(room_selector).length > 0){
          return;
        }
        $('#roompicker').append('<li role="presentation"><a href="#'+escaped+'-chat" id="'+escaped+'-room-picker" aria-controls="'+escaped+'-chat" role="tab" data-toggle="tab" data-roomname="'+roomname+'">'+roomname.substring(0, 12)+' <span data-unread="0" class="label label-info label-as-badge"></span></a></li>')
        $('.chatboxes').append('<ul id="'+escaped+'-chat" role="tabpanel" class="tab-pane fade chat-lines"></ul>')
      }
      function removeRoom(roomname){
        var escaped = css_escape(roomname)
        var room_selector = "#"+escaped+"-chat"
        if($(room_selector).length == 0){
          return;
        }
        $('#'+escaped+"-room-picker").parent().remove()
        $(room_selector).remove()
      }
      function addMessageToRoom(d, roomname){
        ensureRoom(roomname)
        var escaped = css_escape(roomname)
        var scrolldown = false
        var room_selector = "#"+escaped+"-chat"
        var scrollTop = $(room_selector).scrollTop()+$(room_selector).height()
        console.log('getting height of '+room_selector)
        var scrollHeight = $(room_selector)[0].scrollHeight
        // console.log("scrollTop:", scrollTop)
        // console.log("scrollHeight:", scrollHeight)
        if(scrollHeight - scrollTop < 2){
          scrolldown = true
        }
        $(room_selector).append("<li>"+d+"</li>")
        if(scrolldown){
          $(room_selector).scrollTop($(room_selector)[0].scrollHeight);        
        }

        if($('#roompicker li.active #'+escaped+'-room-picker').length != 0){
          // set the unread counter only if it's inactive
          var picker = $('#roompicker #'+escaped+'-room-picker')
          var ucounter = picker.find('label')
          var unread = parseInt(ucounter.data('unread'), 10)
          unread += 1
          ucounter.data('unread', unread)
          ucounter.text(unread)
        }
      }
      socket.on('news', function (data) {
        console.log(data);
        addMessage(data.toString())
        socket.emit('my other event', { my: 'data' });
      });
      socket.on('server_broadcast', function(d){
        console.log(d)
        addMessage("Game Server: "+d)        
      })
      socket.on('message', function(d){
        console.log(d)
        addMessageToRoom(d['user']['name']+': '+d['message'], d['roomname'])
      })
      socket.on('status', function(d){
        console.log(d)
        $('#status').text(d)
      })
      socket.on('good_log_in', function (nuser){
        console.log('good log in', nuser)
        user = nuser
        $('#username').text(nuser['name'])
        $('#username').attr('title', nuser['id'])
        $('#login').hide()
        $('.chat').show()
      })
      socket.on('joined_room', function (roomname) {
        console.log('joined_room', roomname)
        addMessageToRoom("Joined "+roomname, roomname)
        // $('#roomname').text(roomname)
        if(roomname == "matchmaking"){
          $('#matchmaking_view').show()
        }
      })
      socket.on('left_room', function (roomname){
        console.log('left_room', roomname)
        removeRoom(roomname)
        if(roomname == "matchmaking"){
          $('#matchmaking_view').hide()
        }else if(roomname.substring(0, 5) === 'game'){
          $('#'+game_id+".game").remove()
        }
      })

      socket.on('matchmaking_list', function (list){
        $('#matchmaking').html('<ul id="mmlist"></ul>')
        // console.log(list)
        list.forEach(function (i){
          // console.log(i)
          $('#mmlist').append('<li><span data-toggle="tooltip" data-placement="top" title="'+i.id+'">'+i['name']+' W:'+i['wins']+' L:'+i['losses']+'</span></li>')
        })
        $('[data-toggle="tooltip"]').tooltip()
      })

      socket.on('create_game', function (g){
        // TODO
        console.log('create_game', g)
        $('#search_for_match').text("Start another Game")
        ensureGame(g)
        $("#search_for_match").prop("disabled", false)
      })
      
      function ensureGame(g){
        if($('#'+g.id+".game").length > 0){
          return
        }
        console.log('user ids', user.id, g.player1.id, g.player2.id)
        var score_template = '<div class="row"><div class="col-md-6"><ul class="unstyled '+g.player1.id+' turns">'+
          '<li><span data-placement="top" data-toggle="tooltip" title="'+g.player1.id+'" class="name">'+
          g.player1.name+
          '</span> <span class="score">'+g.totals_player1+'</span></li></ul>'+
          (g.player1.id == user.id ? '<div class="gameactions"></div>': "")+
          '</div>'+
          '<div class="col-md-6"><ul class="unstyled '+g.player2.id+' turns"><li><span data-placement="top" data-toggle="tooltip" title="'+g.player2.id+'" class="name" >'+
          g.player2.name+
          '</span> <span class="score">'+g.totals_player2+'</span></li>'+
          '</ul>'+
          (g.player2.id == user.id ? '<div class="gameactions"></div>': "")+
          '</div></div>'
        var main_template = '<div class="game" id="'+
          g.id+'"><h4>game:'+g.id+'</h4><div class="gameinfo">'+score_template+
          '</div></div>'
        
        $('#games').append(main_template)
        g.turns.forEach(function(turn){
          ensureTurn(g, turn)
        })

        $('[data-toggle="tooltip"]').tooltip()
      }
      
      $( document ).on( "click", "#search_for_match", function() {
        console.log($(this))
        socket.emit('search_for_match')
        $(this).prop("disabled", true)
      });

      $( document ).on( "click", ".rollbtn", function() {
        console.log($(this), 'rollbtn')
        var game_id = $(this).closest('.game').attr('id')
        console.log('rolling on', game_id)
        socket.emit('game:'+game_id, 'roll')
      });

      $( document ).on( "click", ".holdbtn", function() {
        var game_id = $(this).closest('.game').attr('id')
        console.log('holding on', game_id)
        socket.emit('game:'+game_id, 'hold')
      });

      $( document ).on( "click", ".closebtn", function() {
        console.log($(this))
        var game_id = $(this).closest('.game').attr('id')
        socket.emit('leave_room', 'game:'+game_id)
        removeRoom('game:'+game_id)
        $('#'+game_id+".game").remove()
      });


      socket.on('reload_game', function (game) {
        console.log('reloading game', game.id, game)
        ensureGame(game)
      })

      socket.on('start_turn', function (game){
        // TODO
        addMessageToRoom(game.active_player+" starts their turn", 'game:'+game.id)
        if(game.active_player == user.id){
          // our turn
          // show actions
          if($('#'+game.id+'.game .gameactions').children().length == 0){
            $('#'+game.id+'.game .gameactions').html('<button class="btn rollbtn">Roll</button> <button class="btn holdbtn">Hold</button>')
            console.log('generating game actions')
          }
          console.log('showing game actions')
          $('#'+game.id+'.game .gameactions').show()
        }else if($('#'+game.id+'.game .gameactions').length > 0){
          $('#'+game.id+'.game .gameactions').hide()
          // opponent turn
          // show "waiting for opponent"
        }
        ensureTurn(game, game.turns[0])
        console.log('start_turn', game.active_player)
      })
      socket.on('roll_result', function (game){
        // TODO
        var name = game.active_player == game.player1.id ? game.player1.name : game.player2.name;
        addMessageToRoom(name+" rolls "+game.turns[0].values[0]+" "+game.turns[0].values[1], 'game:'+game.id)
        console.log('roll_result', game.turns[0])

        ensureTurn(game, game.turns[0])
        
      })

      function ensureTurn (game, turn) {
        console.trace()
        console.log(game, turn)
        var li = $('#'+game.id+'.game .'+turn.roller+'.turns').find('#'+turn.id+'.turn')
        if(li.length == 0){
          $('#'+game.id+'.game .'+turn.roller+'.turns').append("<li class='turn' id='"+turn.id+"'><span class='turn_total'></span><span class='values'></span></li>")
          li = $('#'+game.id+'.game .'+turn.roller+'.turns').find('#'+turn.id+'.turn')
        }
        var $values = li.find('.values')
        $values.html('')
        turn.values = turn.values ? turn.values : []
        turn.values.forEach(function (val, i) {
          $values.append(DIE_MAP[val-1]+"")
          if(i % 2 == 1 && i != turn.values.length-1){
            $values.append(" <i class='fi-plus'></i> ")
          }
        })

        var turn_total = turn.values.reduce(function (previous, v) {
          return previous + v;
        }, 0)+" = "

        if(turn['bust']){
          li.find('.turn_total').addClass('crossed-out')
          turn_total = "BUST!! <i class='fi-skull'></i> " + turn_total
        }
        li.find('.turn_total').html(turn_total)

      }
      socket.on('hold_result', function (game){
        // TODO
        // add to score total for this player?
        var key = game.active_player == game.player1.id ? "1" : "2"
        var overallscore = game['totals_player'+key]
        console.log('scores', game.totals_player1, game.totals_player2)
        // var td = $('#'+game.id+" ."+game.active_player+".turns").children().last().append("= "+total)
        $('#'+game.id+".game ."+game.active_player+" .score").text(overallscore)

        var total = game.turns[0].values.reduce(function (previous, v) {
          return previous + v;
        }, 0)
        addMessageToRoom(game.active_player+" holds on to "+total+' points', 'game:'+game.id)
        console.log('hold_result', total)
      })

      socket.on('game_end', function (game){
        var msg = 'Game Over! '+game.winner.name+" Wins!"
        $('#'+game.id+'.game .gameactions').html('')
        $('#'+game.id+'.game').append(msg)
        $('#'+game.id+'.game').append(" <button class='btn btn-warning closebtn' type='button'>Close this Game and related Chat</button>")
        if(user.id == game.winner.id){
          $('#wins').text(game.winner.wins+" Wins")
          $('#losses').text(game.winner.losses+" Losses")
        }else{
          $('#wins').text(game.loser.wins+" Wins")
          $('#losses').text(game.loser.losses+" Losses")
        }
        addMessageToRoom(msg, 'game:'+game.id)
        console.log('game_end', game)
      })

      socket.on('leaderboard', function (leaders){
        console.log('leaders')
        $('#leaderboard_list').html('')
        leaders.forEach(function (leader){
          $('#leaderboard_list').append('<li>'+leader.name+' W:'+leader.wins+' L:'+leader.losses+'</li>')
        })
      })

      function login_button () {
        console.log('logging in')
        var new_name = $('#name').val()
        socket.emit('log_in', {name: new_name})
      }
      $('#loginbtn').click(function(){login_button()})
      $('#name').keyup(function(e){
        if(e.keyCode == 13){
          login_button()
        }
      });

      function send_message_button () {
        var msg = {user: user, message: $('#message').val(), roomname: $('#roompicker li.active a').data('roomname')}
        // console.log('sending a message', msg)
        socket.emit('send_message', msg)
        $('#message').val('')
      }
      $('#send_message').click(function(){send_message_button()})
      $('#message').keyup(function(e){
        if(e.keyCode == 13){
          send_message_button()
        }
      });

    </script>